<?php

class FiltersTest extends \Tests\WPGraphQL\TestCase\WPGraphQLTestCase {

	/**
	 *
	 */
	public $filter_values = [];

	public function setUp(): void {
		$this->filter_values = [];
		$this->clearSchema();
		parent::setUp(); // TODO: Change the autogenerated stub
	}

	public function tearDown(): void {
		$this->filter_values = [];
		$this->clearSchema();
		parent::tearDown(); // TODO: Change the autogenerated stub
	}

	public function testFilterGraphqlRequestResults() {


		add_filter( 'graphql_request_results', function( $response, $schema, $operation, $query, $variables, $request ) {
			$this->filter_values = [
				'query' => $query,
				'variables' => $variables,
			];
		}, 10, 6 );

		$request = [
			'query' => 'query GetPosts($first:Int){posts(first:$first){nodes{id,title}}}',
			'variables' => [ 'first' => 1],
		];

		$actual = graphql( $request );

		codecept_debug( $this->filter_values, $request );

		$this->assertSame( $this->filter_values, $request  );

	}

	public function testFilterGraphqlRequestResultsForBatchQuery() {

		add_filter( 'graphql_request_results', function( $response, $schema, $operation, $query, $variables, $request ) {

			$this->filter_values[] = [
				'query' => $query,
				'variables' => $variables,
			];

			return $response;

		}, 10, 6 );

		$request = [
			[
				'query' => 'query GetPosts($first:Int){posts(first:$first){nodes{id,title}}}',
				'variables' => [ 'first' => 1 ],
			],
			[
				'query' => 'query GetPosts($first:Int){posts(first:$first){nodes{id}}}',
				'variables' => [ 'first' => 2 ],
			]
		];

		$actual = graphql( $request );

		codecept_debug( $this->filter_values );
		codecept_debug( $request );

		$this->assertSame( $request, $this->filter_values );
	}

}
