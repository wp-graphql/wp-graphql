services:
  app:
    container_name: wordpress
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: app
    image: wp-graphql:latest-wp${WP_VERSION-6.8}-php${PHP_VERSION-8.3}
    depends_on:
      - app_db
    volumes:
      - '.:/var/www/html/wp-content/plugins/wp-graphql'
      - './.log/app:/var/log/apache2'
    env_file:
      - .env
    environment:
      WP_URL: http://localhost:8091
      USING_XDEBUG: ${USING_XDEBUG:-}
    ports:
      - '8091:80'
    networks:
      local:

  testing:
    container_name: testing
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: testing
    image: wp-graphql:latest-wp${WP_VERSION-6.8}-php${PHP_VERSION-8.3}
    depends_on:
      - app_db
    volumes:
      - '.:/var/www/html/wp-content/plugins/wp-graphql'
      - './.log/app:/var/log/apache2'
    env_file:
      - .env
    environment:
      WP_URL: http://localhost:8091
      USING_XDEBUG: ${USING_XDEBUG:-}
    networks:
      local:

  app_db:
    container_name: mysql
    image: mariadb:10
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE:      ${WORDPRESS_DB_USER:-wordpress}
      MYSQL_USER:          ${WORDPRESS_DB_USER:-wordpress}
      MYSQL_PASSWORD:      ${WORDPRESS_DB_PASSWORD:-wordpress}
    ports:
      - '3306'
    restart: always
    networks:
      testing:
      local:
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -proot"]
      start_period: 15s
      interval: 3s
      timeout: 3s
      retries: 5

networks:
  local:
  testing:

volumes:
  wordpress:
  db:
