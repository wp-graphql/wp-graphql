{"version":3,"file":"extensions.js","mappings":"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","sources":["webpack://wp-graphql/./packages/extensions/Extensions.js","webpack://wp-graphql/./packages/extensions/PluginCard.js","webpack://wp-graphql/./packages/extensions/useInstallPlugin.js","webpack://wp-graphql/./packages/extensions/utils.js","webpack://wp-graphql/./packages/extensions/index.scss?cbcd","webpack://wp-graphql/external window \"React\"","webpack://wp-graphql/external window [\"wp\",\"apiFetch\"]","webpack://wp-graphql/external window [\"wp\",\"components\"]","webpack://wp-graphql/external window [\"wp\",\"element\"]","webpack://wp-graphql/external window [\"wp\",\"i18n\"]","webpack://wp-graphql/webpack/bootstrap","webpack://wp-graphql/webpack/runtime/compat get default export","webpack://wp-graphql/webpack/runtime/define property getters","webpack://wp-graphql/webpack/runtime/hasOwnProperty shorthand","webpack://wp-graphql/webpack/runtime/make namespace object","webpack://wp-graphql/./packages/extensions/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport PluginCard from './PluginCard';\n\n/**\n * Extensions component to display the list of WPGraphQL extensions.\n *\n * @return {JSX.Element} The Extensions component.\n */\nconst Extensions = () => {\n    const [extensions, setExtensions] = useState([]);\n\n    useEffect(() => {\n        if (window.wpgraphqlExtensions && window.wpgraphqlExtensions.extensions) {\n            setExtensions(window.wpgraphqlExtensions.extensions);\n        }\n    }, []);\n\n    return (\n        <div className=\"wp-clearfix\">\n            <div className=\"plugin-cards\">\n                {extensions.map((extension) => (\n                    <PluginCard key={extension.plugin_url} plugin={extension} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Extensions;\n","import { __ } from '@wordpress/i18n';\nimport { Button, Spinner, Notice } from '@wordpress/components';\nimport { useState, useEffect } from '@wordpress/element';\nimport useInstallPlugin from './useInstallPlugin';\nimport { getButtonDetails } from './utils';\n\nconst PluginCard = ({ plugin }) => {\n    const { installing, activating, status, error, installPlugin, activatePlugin } = useInstallPlugin(plugin.plugin_url, plugin.plugin_path);\n    const [isInstalled, setIsInstalled] = useState(plugin.installed);\n    const [isActive, setIsActive] = useState(plugin.active);\n    const [isErrorVisible, setIsErrorVisible] = useState(true);\n\n    useEffect(() => {\n        setIsInstalled(plugin.installed);\n        setIsActive(plugin.active);\n    }, [plugin]);\n\n    const handleButtonClick = async () => {\n        const prevInstalled = isInstalled;\n        const prevActive = isActive;\n    \n        try {\n            if (!isInstalled) {\n                await installPlugin();\n                setIsInstalled(true);\n                setIsActive(true); // Assume successful activation after installation\n            } else {\n                await activatePlugin(plugin.plugin_path);\n                setIsActive(true);\n            }\n        } catch (err) {\n            setIsInstalled(prevInstalled);\n            setIsActive(prevActive);\n        } finally {\n            // Ensure the extension status in the global window object is updated\n            window.wpgraphqlExtensions.extensions = window.wpgraphqlExtensions.extensions.map((extension) =>\n                extension.plugin_url === plugin.plugin_url ? { ...extension, installed: isInstalled, active: isActive } : extension\n            );\n        }\n    };\n\n    const host = new URL(plugin.plugin_url).host;\n    const { buttonText, buttonDisabled } = getButtonDetails(host, plugin.plugin_url, isInstalled, isActive, installing, activating);\n\n    return (\n        <div className=\"plugin-card\">\n            <div className=\"plugin-card-top\">\n                <div className=\"name column-name\">\n                    <h2>{plugin.name}</h2>\n                    {plugin.experiment && <em className=\"plugin-experimental\">(experimental)</em>}\n                </div>\n                <div className=\"action-links\">\n                    <ul className=\"plugin-action-buttons\">\n                        {host.includes('wordpress.org') && (\n                            <li>\n                                <button\n                                    type=\"button\"\n                                    className={`button ${isActive ? 'button-disabled' : 'button-primary'}`}\n                                    disabled={buttonDisabled}\n                                    onClick={handleButtonClick}\n                                >\n                                    {buttonText}\n                                    {(installing || activating) && <Spinner />}\n                                </button>\n                            </li>\n                        )}\n                        {host.includes('github.com') && (\n                            <li>\n                                <a\n                                    href={plugin.plugin_url}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    className=\"button button-secondary\"\n                                >\n                                    {__('View on GitHub', 'wp-graphql')}\n                                </a>\n                            </li>\n                        )}\n                        {plugin.support_url && (\n                            <li>\n                                <a\n                                    href={plugin.support_url}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    className=\"thickbox open-plugin-details-modal\"\n                                >\n                                    {__('Get Support', 'wp-graphql')}\n                                </a>\n                            </li>\n                        )}\n                        {plugin.settings_link && (\n                            <li>\n                                <a href={plugin.settings_link}>{__('Settings', 'wp-graphql')}</a>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n                <div className=\"desc column-description\">\n                    <p>{plugin.description}</p>\n                </div>\n            </div>\n            {error && isErrorVisible && (\n                <Notice\n                    status=\"error\"\n                    isDismissible\n                    onRemove={() => setIsErrorVisible(false)}\n                >\n                    {error}\n                </Notice>\n            )}\n        </div>\n    );\n};\n\nexport default PluginCard;\n","import { useState } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst useInstallPlugin = (pluginUrl, pluginPath) => {\n    const [installing, setInstalling] = useState(false);\n    const [activating, setActivating] = useState(false);\n    const [status, setStatus] = useState('');\n    const [error, setError] = useState('');\n\n    // Helper function to update the status and error states\n    const updateStatus = (newStatus, newError = '') => {\n        setStatus(newStatus);\n        setError(newError);\n    };\n\n    // Helper function to update the plugin's activation state in wpgraphqlExtensions\n    const updateExtensionStatus = (isActive) => {\n        window.wpgraphqlExtensions.extensions = window.wpgraphqlExtensions.extensions.map((extension) =>\n            extension.plugin_url === pluginUrl ? { ...extension, installed: true, active: isActive } : extension\n        );\n    };\n\n    const activatePlugin = async (path = pluginPath) => {\n        setActivating(true);\n        updateStatus(__('Activating...', 'wp-graphql'));\n    \n        if (!path) {\n            let slug = new URL(pluginUrl).pathname.split('/').filter(Boolean).pop();\n            path = `${slug}/${slug}.php`;\n        }\n    \n        try {\n            const activateResult = await apiFetch({\n                path: `/wp/v2/plugins/${path}`,\n                method: 'PUT',\n                data: { status: 'active' },\n                headers: {\n                    'X-WP-Nonce': wpgraphqlExtensions.nonce,\n                },\n            });\n    \n            const jsonResponse = activateResult;\n    \n            if (jsonResponse.status === 'active') {\n                updateStatus(__('Active', 'wp-graphql'));\n                updateExtensionStatus(true);\n                return true;  // Indicate success\n            } else if (jsonResponse.message.includes('Plugin file does not exist')) {\n                throw new Error(__('Plugin file does not exist', 'wp-graphql'));\n            } else {\n                throw new Error(__('Activation failed', 'wp-graphql'));\n            }\n        } catch (err) {\n            updateStatus(__('Activation failed', 'wp-graphql'), err.message || __('Activation failed', 'wp-graphql'));\n            throw err;  // Re-throw error to handle in PluginCard\n        } finally {\n            setInstalling(false);\n            setActivating(false);\n        }\n    };\n    \n    const installPlugin = async () => {\n        setInstalling(true);\n        updateStatus(__('Installing...', 'wp-graphql'));\n    \n        let slug = new URL(pluginUrl).pathname.split('/').filter(Boolean).pop();\n    \n        try {\n            const installResult = await apiFetch({\n                path: '/wp/v2/plugins',\n                method: 'POST',\n                data: {\n                    slug: slug,\n                    status: 'inactive',\n                },\n                headers: {\n                    'X-WP-Nonce': wpgraphqlExtensions.nonce,\n                },\n            });\n    \n            if (installResult.status !== 'inactive') {\n                throw new Error(__('Installation failed', 'wp-graphql'));\n            }\n    \n            await activatePlugin(pluginPath);\n        } catch (err) {\n            if (err.message.includes('destination folder already exists')) {\n                await activatePlugin(pluginPath);\n            } else {\n                updateStatus(__('Installation failed', 'wp-graphql'), err.message || __('Installation failed', 'wp-graphql'));\n                setInstalling(false);\n                throw err;  // Re-throw error to handle in PluginCard\n            }\n        }\n    };    \n\n    return { installing, activating, status, error, installPlugin, activatePlugin };\n};\n\nexport default useInstallPlugin;\n","import { __ } from '@wordpress/i18n';\n\n/**\n * Returns the details for the button based on the plugin status and host.\n *\n * @param {string} host - The host name where the plugin is being used.\n * @param {string} plugin_url - The URL of the plugin.\n * @param {boolean} isInstalled - Whether the plugin is installed.\n * @param {boolean} isActive - Whether the plugin is active.\n * @param {boolean} installing - Whether the plugin is currently being installed.\n * @param {boolean} activating - Whether the plugin is currently being activated.\n * @param {Function} activatePlugin - Function to activate the plugin.\n * @returns {{buttonText: string, buttonDisabled: boolean, buttonOnClick: Function|null}} The button details.\n */\nexport const getButtonDetails = (host, plugin_url, isInstalled, isActive, installing, activating, activatePlugin) => {\n    let buttonText;\n    let buttonDisabled = false;\n    let buttonOnClick = null;\n\n    /**\n     * Opens a new browser window with the specified URL.\n     *\n     * @param {string} url - The URL to open.\n     * @returns {Function} A function that opens the URL in a new window.\n     */\n    const openLink = (url) => () => window.open(url, '_blank');\n\n    if (installing) {\n        buttonText = __('Installing...', 'wp-graphql');\n        buttonDisabled = true;\n    } else if (activating) {\n        buttonText = __('Activating...', 'wp-graphql');\n        buttonDisabled = true;\n    } else if (isActive) {\n        buttonText = __('Active', 'wp-graphql');\n        buttonDisabled = true;\n    } else if (isInstalled) {\n        buttonText = __('Activate', 'wp-graphql');\n        buttonOnClick = activatePlugin;\n    } else {\n        const domain = new URL(plugin_url).hostname.toLowerCase();\n\n        switch (true) {\n            case /github\\.com$/.test(domain):\n                buttonText = __('View on GitHub', 'wp-graphql');\n                buttonOnClick = openLink(plugin_url);\n                break;\n            case /bitbucket\\.org$/.test(domain):\n                buttonText = __('View on Bitbucket', 'wp-graphql');\n                buttonOnClick = openLink(plugin_url);\n                break;\n            case /gitlab\\.com$/.test(domain):\n                buttonText = __('View on GitLab', 'wp-graphql');\n                buttonOnClick = openLink(plugin_url);\n                break;\n            case /wordpress\\.org$/.test(domain):\n                buttonText = __('Install & Activate', 'wp-graphql');\n                buttonOnClick = activatePlugin;\n                break;\n            default:\n                buttonText = __('View Plugin', 'wp-graphql');\n                buttonOnClick = openLink(plugin_url);\n        }\n    }\n\n    return { buttonText, buttonDisabled, buttonOnClick };\n};\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createRoot, createElement } from '@wordpress/element';\nimport Extensions from './Extensions';\nimport './index.scss';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const container = document.getElementById('wpgraphql-extensions');\n    if (container) {\n        const root = createRoot(container);\n        root.render(createElement(Extensions));\n    }\n});\n"],"names":["useEffect","useState","__","PluginCard","Extensions","extensions","setExtensions","window","wpgraphqlExtensions","createElement","className","map","extension","key","plugin_url","plugin","Button","Spinner","Notice","useInstallPlugin","getButtonDetails","installing","activating","status","error","installPlugin","activatePlugin","plugin_path","isInstalled","setIsInstalled","installed","isActive","setIsActive","active","isErrorVisible","setIsErrorVisible","handleButtonClick","prevInstalled","prevActive","err","host","URL","buttonText","buttonDisabled","name","experiment","includes","type","disabled","onClick","href","target","rel","support_url","settings_link","description","isDismissible","onRemove","apiFetch","pluginUrl","pluginPath","setInstalling","setActivating","setStatus","setError","updateStatus","newStatus","newError","updateExtensionStatus","path","slug","pathname","split","filter","Boolean","pop","activateResult","method","data","headers","nonce","jsonResponse","message","Error","installResult","buttonOnClick","openLink","url","open","domain","hostname","toLowerCase","test","createRoot","document","addEventListener","container","getElementById","root","render"],"sourceRoot":""}